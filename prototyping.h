
int           est_vide_file                   (File *);
int           enfiler                         (File *, cellule *);
int           defiler                         (File *);
int           vider_file                      (File *);
int           copy_file                       (File *, File *);
cellule2      *inserer_fin_liste_cellule2     (cellule2 *, int , int , int);
cellule2      *inserer_debut                  (cellule2 *, cellule2 *);
cellule       *inserer_fin_liste_cellule      (cellule *, int ,int);
cellule       *supprimer_fin_liste            (cellule *);
cellule7      *inserer_fin_liste_cellule7     (cellule7 *, cellule7 *);
cellule7      *addToEndOfListe                (cellule7 *, int , int );
CelluleList   *addList                        (CelluleList *, cellule7 *);
CelluleList   *findPaths                      (cellule2 *, int [2][8], int , CelluleList *);
cellule5      *insert_into_cellule5_liste     (cellule5 *, cellule5 *);
cellule5      *generate_all_path              (cellule2 **, int);
int           maximun_cellule5                (cellule5 *);
int           minimun_cellule5                (cellule5 *);
cellule       *recognise_fin_list             (cellule *, cellule *[1]);
void          transfert_cellule7_cellule      (File *, cellule7 *);
void          freerecursif                    (cellule2 *);
void          freeallcl                       (cellule2 **, int);
void          freell                          (cellule5 *);

void          chks_field_set_owner            (ChksField *);
void          apply_style_button              (ChksField *[8][8]);
int           delete_value_ChkPlayer          (ChkPlayer *,int  ,int );
int           verify_for_not_queen            (ChksField *, ChksField *,int ,int ,File *);
int           first_is_one_four               (ChksField *);
int           first_is_one                    (ChksField *,int );
void          first_one_or_two                (ChksField *,int *,int *,int ,ChksOwner ,etat_window *,int ,int );
int           two_consecutif                  (int ,int  ,ChksField *, int ,ChksOwner);
int           two_consecutif2                 (int ,int  ,etat_window *, int ,ChksOwner);
int           exist_case_beetwen_one_two      (ChksField *,ChksField *,int ,File *);
int           techek_entred_piece             (ChksField *,ChksField *,File *);
void          piece_entered                   (GtkWidget *,ChksField *);
void          piece_cliecked                  (GtkWidget *,ChksField *);
void          piece_leaved                    (GtkWidget *,ChksField *);
cellule2      *construire_arbre1              (etat_window *,cellule2 *,int ,int);
cellule2      *construire_arbre2              (etat_window *,cellule2 *,int ,int);
cellule2      *add_none_first                 (cellule2 *,int ,etat_window *,int ,int);
cellule2      *construire_arbre_queen         (ChksField *,cellule2 *,int ,int ,int );
void          drop                            (ChksField *,ChksField *,ChksOwner );
void          drop1                           (etat_window *,ChksOwner ,int ,int ,int ,int );
void          drop_two_betwen_fl_lt           (ChksField *,ChksField *,File *,ChksOwner );
void          drop_two_betwen_fl_lt1          (etat_window *,File *,ChksOwner ,int ,int ,int ,int );
void          copie_win_field                 (Chkswindow *,etat_window *);
void          copie_win_field1                (etat_window *,etat_window *);
cellule2      *queen_arbre1                   (cellule2 *,int ,etat_window *,int ,int ,ChksOwner ,ChksOwner );
cellule2      **table_arbre_chemin            (cellule2 **,etat_window *,ChksOwner );
void          change_row_col_piece            (etat_window *,ChksField *,int ,int ,ChksOwner );
int           Minmaxalgorithm                 (ChksOwner ,int ,etat_window *,bestpath *);
int           Minmaxalgorithm2                (ChksOwner ,int ,etat_window *,bestpath *);
void          arbre_descicion                 (Glob *);
gboolean      effectuer_moumvment             (GtkWidget* , GdkEventKey , Glob *);
void          add_filed_grid                  (Chkswindow *,ChksField *[8][8]);
void          init_table                      (Chkswindow *);
gboolean      BotVsBot                        (Chkswindow *);
void          Myfonct                         (GtkWidget *,Chkswindow *);
GtkWidget     *Make_headerbar                 (Chkswindow *);
void          init_player                     (ChkPlayer *, ChksOwner);
void          init_window                     (int, int );
